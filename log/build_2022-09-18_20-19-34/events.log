[0.000000] (-) TimerEvent: {}
[0.000393] (-) JobUnselected: {'identifier': 'applanix_driver'}
[0.000515] (-) JobUnselected: {'identifier': 'autoware_auto_msgs'}
[0.000596] (-) JobUnselected: {'identifier': 'kia_test'}
[0.000775] (-) JobUnselected: {'identifier': 'lexus_rx_450h_description'}
[0.000785] (-) JobUnselected: {'identifier': 'minimal_simulator'}
[0.000794] (-) JobUnselected: {'identifier': 'motion_model_testing_simulator'}
[0.000802] (-) JobUnselected: {'identifier': 'pid_velocity_control'}
[0.000810] (-) JobUnselected: {'identifier': 'record_traj'}
[0.000819] (-) JobUnselected: {'identifier': 'robot_steering_converter'}
[0.000827] (-) JobUnselected: {'identifier': 'simulation_sync'}
[0.000835] (-) JobUnselected: {'identifier': 'trajectory_following'}
[0.000846] (file_trajectory_planner) JobQueued: {'identifier': 'file_trajectory_planner', 'dependencies': OrderedDict([('autoware_auto_msgs', '/home/gabriel/software/AutonomousDriving/install/autoware_auto_msgs')])}
[0.000860] (file_trajectory_planner) JobStarted: {'identifier': 'file_trajectory_planner'}
[0.014498] (file_trajectory_planner) JobProgress: {'identifier': 'file_trajectory_planner', 'progress': 'cmake'}
[0.014846] (file_trajectory_planner) JobProgress: {'identifier': 'file_trajectory_planner', 'progress': 'build'}
[0.015243] (file_trajectory_planner) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/gabriel/software/AutonomousDriving/build/file_trajectory_planner', '--', '-j16', '-l16'], 'cwd': '/home/gabriel/software/AutonomousDriving/build/file_trajectory_planner', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_IL:en'), ('USER', 'gabriel'), ('SSH_AGENT_PID', '2033'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/gabriel/software/AutonomousDriving/install/autoware_auto_msgs/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib:/home/gabriel/.mujoco/mujoco200/bin:/home/gabriel/.mujoco/mjpro131/bin:/home/gabriel/.mujoco/mjpro150/bin:/usr/lib/x86_64-linux-gnu/'), ('HOME', '/home/gabriel'), ('OLDPWD', '/home/gabriel'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1813'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '77496'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'gabriel'), ('JOURNAL_STREAM', '8:52515'), ('_', '/home/gabriel/.local/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'gabriel'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/home/gabriel/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/gbhrt-ASUS:@/tmp/.ICE-unix/2068,unix/gbhrt-ASUS:/tmp/.ICE-unix/2068'), ('INVOCATION_ID', '6ccc07e5b7c441ab9d665764e0575d07'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('COLCON_DEFAULTS_FILE', '/home/gabriel/software/AutowareAuto/tools/ade_image/colcon-defaults.yaml'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/gabriel/software/AutonomousDriving/install/autoware_auto_msgs:/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:ff494ec2-8004-40a5-856a-16390e04977b'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/gabriel/software/AutonomousDriving/build/file_trajectory_planner'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/gabriel/software/AutonomousDriving/install/autoware_auto_msgs/lib/python3.8/site-packages:/opt/ros/galactic/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/home/gabriel/software/AutonomousDriving/install/autoware_auto_msgs:/opt/ros/galactic')]), 'shell': False}
[0.033141] (file_trajectory_planner) StdoutLine: {'line': b'-- Found ament_cmake_auto: 1.1.5 (/opt/ros/galactic/share/ament_cmake_auto/cmake)\n'}
[0.047712] (file_trajectory_planner) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.100184] (-) TimerEvent: {}
[0.137928] (file_trajectory_planner) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.139829] (file_trajectory_planner) StdoutLine: {'line': b'-- Found rosidl_adapter: 2.2.1 (/opt/ros/galactic/share/rosidl_adapter/cmake)\n'}
[0.200316] (-) TimerEvent: {}
[0.211708] (file_trajectory_planner) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.242801] (file_trajectory_planner) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)\n'}
[0.243693] (file_trajectory_planner) StdoutLine: {'line': b'-- Found rmw_cyclonedds_cpp: 0.22.4 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)\n'}
[0.254533] (file_trajectory_planner) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_cyclonedds_cpp' as default\n"}
[0.300496] (-) TimerEvent: {}
[0.400727] (-) TimerEvent: {}
[0.500949] (-) TimerEvent: {}
[0.601156] (-) TimerEvent: {}
[0.678109] (file_trajectory_planner) StdoutLine: {'line': b'-- Configuring done\n'}
[0.689574] (file_trajectory_planner) StdoutLine: {'line': b'-- Generating done\n'}
[0.690535] (file_trajectory_planner) StdoutLine: {'line': b'-- Build files have been written to: /home/gabriel/software/AutonomousDriving/build/file_trajectory_planner\n'}
[0.701381] (-) TimerEvent: {}
[0.708051] (file_trajectory_planner) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target file_trajectory_planner\x1b[0m\n'}
[0.727771] (file_trajectory_planner) StdoutLine: {'line': b'[ 16%] \x1b[32mBuilding CXX object CMakeFiles/file_trajectory_planner.dir/src/file_trajectory_planner_node.cpp.o\x1b[0m\n'}
[0.727904] (file_trajectory_planner) StdoutLine: {'line': b'[ 33%] \x1b[32mBuilding CXX object CMakeFiles/file_trajectory_planner.dir/src/file_trajectory_planner.cpp.o\x1b[0m\n'}
[0.801482] (-) TimerEvent: {}
[0.803825] (file_trajectory_planner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:8:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kfatal error: \x1b[m\x1b[Koptimal_velocity_lib/optimal_velocity_lib.hpp: No such file or directory\n'}
[0.804033] (file_trajectory_planner) StderrLine: {'line': b'    8 | #include \x1b[01;31m\x1b[K<optimal_velocity_lib/optimal_velocity_lib.hpp>\x1b[m\x1b[K\n'}
[0.804088] (file_trajectory_planner) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.804136] (file_trajectory_planner) StderrLine: {'line': b'compilation terminated.\n'}
[0.806119] (file_trajectory_planner) StderrLine: {'line': b'make[2]: *** [CMakeFiles/file_trajectory_planner.dir/build.make:76: CMakeFiles/file_trajectory_planner.dir/src/file_trajectory_planner.cpp.o] Error 1\n'}
[0.806237] (file_trajectory_planner) StderrLine: {'line': b'make[2]: *** Waiting for unfinished jobs....\n'}
[0.901629] (-) TimerEvent: {}
[1.001918] (-) TimerEvent: {}
[1.102263] (-) TimerEvent: {}
[1.202592] (-) TimerEvent: {}
[1.302902] (-) TimerEvent: {}
[1.403206] (-) TimerEvent: {}
[1.503502] (-) TimerEvent: {}
[1.603744] (-) TimerEvent: {}
[1.704064] (-) TimerEvent: {}
[1.804375] (-) TimerEvent: {}
[1.841901] (file_trajectory_planner) StderrLine: {'line': b'\x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KFileTrajectoryPlannerNode::FileTrajectoryPlannerNode()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.842141] (file_trajectory_planner) StderrLine: {'line': b"\x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:27:75:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[1.842193] (file_trajectory_planner) StderrLine: {'line': b'   27 |     const std::string file_name = declare_parameter("trajectory_file_name"\x1b[01;35m\x1b[K)\x1b[m\x1b[K.get<std::string>();\n'}
[1.842228] (file_trajectory_planner) StderrLine: {'line': b'      |                                                                           \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.842268] (file_trajectory_planner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.842300] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.842331] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[1.842362] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:2\x1b[m\x1b[K:\n'}
[1.842396] (file_trajectory_planner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[1.842426] (file_trajectory_planner) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[1.842458] (file_trajectory_planner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.842490] (file_trajectory_planner) StderrLine: {'line': b"\x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:29:83:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[1.842527] (file_trajectory_planner) StderrLine: {'line': b'   29 |    const std::string out_file_name = declare_parameter("trajectory_out_file_name"\x1b[01;35m\x1b[K)\x1b[m\x1b[K.get<std::string>();\n'}
[1.842560] (file_trajectory_planner) StderrLine: {'line': b'      |                                                                                  \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.842594] (file_trajectory_planner) StderrLine: {'line': b'\n'}
[1.842627] (file_trajectory_planner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.842659] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.842693] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[1.842727] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:2\x1b[m\x1b[K:\n'}
[1.842762] (file_trajectory_planner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[1.842797] (file_trajectory_planner) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[1.842941] (file_trajectory_planner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.842988] (file_trajectory_planner) StderrLine: {'line': b"\x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:31:71:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[1.843036] (file_trajectory_planner) StderrLine: {'line': b'   31 |     const bool compute_velocity = declare_parameter("compute_velocity"\x1b[01;35m\x1b[K)\x1b[m\x1b[K.get<bool>();\n'}
[1.843069] (file_trajectory_planner) StderrLine: {'line': b'      |                                                                       \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.843102] (file_trajectory_planner) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[1.843134] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.843165] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[1.843196] (file_trajectory_planner) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:2\x1b[m\x1b[K:\n'}
[1.843228] (file_trajectory_planner) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[1.843261] (file_trajectory_planner) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[1.843292] (file_trajectory_planner) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.904529] (-) TimerEvent: {}
[2.004839] (-) TimerEvent: {}
[2.105141] (-) TimerEvent: {}
[2.205398] (-) TimerEvent: {}
[2.305721] (-) TimerEvent: {}
[2.406017] (-) TimerEvent: {}
[2.506321] (-) TimerEvent: {}
[2.606622] (-) TimerEvent: {}
[2.706942] (-) TimerEvent: {}
[2.807278] (-) TimerEvent: {}
[2.907595] (-) TimerEvent: {}
[3.007923] (-) TimerEvent: {}
[3.108214] (-) TimerEvent: {}
[3.208520] (-) TimerEvent: {}
[3.308829] (-) TimerEvent: {}
[3.409143] (-) TimerEvent: {}
[3.509440] (-) TimerEvent: {}
[3.609699] (-) TimerEvent: {}
[3.709957] (-) TimerEvent: {}
[3.810202] (-) TimerEvent: {}
[3.910466] (-) TimerEvent: {}
[4.010788] (-) TimerEvent: {}
[4.111114] (-) TimerEvent: {}
[4.211401] (-) TimerEvent: {}
[4.311602] (-) TimerEvent: {}
[4.411822] (-) TimerEvent: {}
[4.512068] (-) TimerEvent: {}
[4.612383] (-) TimerEvent: {}
[4.712661] (-) TimerEvent: {}
[4.812909] (-) TimerEvent: {}
[4.913202] (-) TimerEvent: {}
[5.013462] (-) TimerEvent: {}
[5.113743] (-) TimerEvent: {}
[5.214020] (-) TimerEvent: {}
[5.284129] (file_trajectory_planner) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:107: CMakeFiles/file_trajectory_planner.dir/all] Error 2\n'}
[5.284372] (file_trajectory_planner) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[5.285911] (file_trajectory_planner) CommandEnded: {'returncode': 2}
[5.314166] (-) TimerEvent: {}
[5.336616] (file_trajectory_planner) JobEnded: {'identifier': 'file_trajectory_planner', 'rc': 2}
[5.346964] (-) EventReactorShutdown: {}
