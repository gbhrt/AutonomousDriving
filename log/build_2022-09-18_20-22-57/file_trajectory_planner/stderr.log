In file included from [01m[K/opt/ros/galactic/include/rclcpp/client.hpp:40[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:23[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:36[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:4[m[K:
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:[m[K In member function â€˜[01m[Kstd::size_t FileTrajectoryPlanner::get_closest_state_index(KinematicState)[m[Kâ€™:
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:213:47:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 5 has type â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  213 |     RCLCPP_INFO(rclcpp::get_logger("logger"), [01;35m[K"max_steps: %d"[m[K, [32m[K(max_steps)[m[K);
      |                                               [01;35m[K^~~~~~~~~~~~~~~[m[K  [32m[K~~~~~~~~~~~[m[K
      |                                                                 [32m[K|[m[K
      |                                                                 [32m[Ksize_t {aka long unsigned int}[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:213:60:[m[K [01;36m[Knote: [m[Kformat string is defined here
  213 |     RCLCPP_INFO(rclcpp::get_logger("logger"), "max_steps: [01;36m[K%d[m[K", (max_steps));
      |                                                           [01;36m[K~^[m[K
      |                                                            [01;36m[K|[m[K
      |                                                            [01;36m[Kint[m[K
      |                                                           [32m[K%ld[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:[m[K In member function â€˜[01m[Kbool FileTrajectoryPlanner::init_traj(std::string, std::string, bool, bool)[m[Kâ€™:
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:29:84:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kcompute_velocity[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   29 | bool FileTrajectoryPlanner::init_traj(std::string file_name, std::string out, [01;35m[Kbool compute_velocity[m[K, bool also_behind)
      |                                                                               [01;35m[K~~~~~^~~~~~~~~~~~~~~~[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:29:107:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kalso_behind[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   29 | bool FileTrajectoryPlanner::init_traj(std::string file_name, std::string out, bool compute_velocity, [01;35m[Kbool also_behind[m[K)
      |                                                                                                      [01;35m[K~~~~~^~~~~~~~~~~[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:[m[K In member function â€˜[01m[KTrajectory FileTrajectoryPlanner::get_trajectory(KinematicState&)[m[Kâ€™:
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:124:10:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kpoints_number[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  124 |   size_t [01;35m[Kpoints_number[m[K = traj.CAPACITY / 2;
      |          [01;35m[K^~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/client.hpp:40[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:23[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:36[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:4[m[K:
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:[m[K In member function â€˜[01m[Kstd::size_t FileTrajectoryPlanner::get_closest_state_index(KinematicState)[m[Kâ€™:
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:213:47:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 5 has type â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  213 |     RCLCPP_INFO(rclcpp::get_logger("logger"), [01;35m[K"max_steps: %d"[m[K, [32m[K(max_steps)[m[K);
      |                                               [01;35m[K^~~~~~~~~~~~~~~[m[K  [32m[K~~~~~~~~~~~[m[K
      |                                                                 [32m[K|[m[K
      |                                                                 [32m[Ksize_t {aka long unsigned int}[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner.cpp:213:60:[m[K [01;36m[Knote: [m[Kformat string is defined here
  213 |     RCLCPP_INFO(rclcpp::get_logger("logger"), "max_steps: [01;36m[K%d[m[K", (max_steps));
      |                                                           [01;36m[K~^[m[K
      |                                                            [01;36m[K|[m[K
      |                                                            [01;36m[Kint[m[K
      |                                                           [32m[K%ld[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:[m[K In constructor â€˜[01m[KFileTrajectoryPlannerNode::FileTrajectoryPlannerNode()[m[Kâ€™:
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:27:75:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   27 |     const std::string file_name = declare_parameter("trajectory_file_name"[01;35m[K)[m[K.get<std::string>();
      |                                                                           [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:2[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:29:83:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   29 |    const std::string out_file_name = declare_parameter("trajectory_out_file_name"[01;35m[K)[m[K.get<std::string>();
      |                                                                                  [01;35m[K^[m[K

In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:2[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:31:71:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   31 |     const bool compute_velocity = declare_parameter("compute_velocity"[01;35m[K)[m[K.get<bool>();
      |                                                                       [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/file_trajectory_planner/src/file_trajectory_planner_node.cpp:2[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
