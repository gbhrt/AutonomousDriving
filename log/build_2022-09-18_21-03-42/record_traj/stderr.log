[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:[m[K In constructor â€˜[01m[KRecordTrajNode::RecordTrajNode()[m[Kâ€™:
[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:70:50:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   70 |       file_name = declare_parameter("record_file"[01;35m[K)[m[K.get<std::string>();
      |                                                  [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:11[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/client.hpp:40[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:23[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:36[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:11[m[K:
[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:74:37:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%s[m[Kâ€™ expects argument of type â€˜[01m[Kchar*[m[Kâ€™, but argument 5 has type â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
   74 |     RCLCPP_INFO(this->get_logger(), [01;35m[K"file_name: %s"[m[K,file_name);
      |                                     [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:74:50:[m[K [01;36m[Knote: [m[Kformat string is defined here
   74 |     RCLCPP_INFO(this->get_logger(), "file_name: [01;36m[K%s[m[K",file_name);
      |                                                 [01;36m[K~^[m[K
      |                                                  [01;36m[K|[m[K
      |                                                  [01;36m[Kchar*[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:[m[K In constructor â€˜[01m[KRecordTrajNode::RecordTrajNode()[m[Kâ€™:
[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:70:50:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   70 |       file_name = declare_parameter("record_file"[01;35m[K)[m[K.get<std::string>();
      |                                                  [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:11[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/client.hpp:40[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:23[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:36[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:11[m[K:
[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:74:37:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%s[m[Kâ€™ expects argument of type â€˜[01m[Kchar*[m[Kâ€™, but argument 5 has type â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
   74 |     RCLCPP_INFO(this->get_logger(), [01;35m[K"file_name: %s"[m[K,file_name);
      |                                     [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/gabriel/software/AutonomousDriving/src/record_traj/src/record_traj_node.cpp:74:50:[m[K [01;36m[Knote: [m[Kformat string is defined here
   74 |     RCLCPP_INFO(this->get_logger(), "file_name: [01;36m[K%s[m[K",file_name);
      |                                                 [01;36m[K~^[m[K
      |                                                  [01;36m[K|[m[K
      |                                                  [01;36m[Kchar*[m[K
